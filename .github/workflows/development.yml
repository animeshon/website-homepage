# name: Homepage [Tier 2]

# env:
#   PROJECT_ID:       ${{ secrets.TIER_2_GENERAL_PROJECT }}
#   GCR_CREDENTIALS:  ${{ secrets.TIER_2_GENERAL_REGISTRY_CREDENTIALS }}
  
#   TF_WORKSPACE:     ${{ secrets.TIER_2_TERRAFORM_WORKSPACE }}
#   TF_CREDENTIALS:   ${{ secrets.TIER_2_TERRAFORM_CREDENTIALS }}

# on:
#   push:
#     branches-ignore: [ master ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Clone the repository code
#       uses: actions/checkout@v2

#     - name: Build and push Docker images to Google Cloud Registry
#       uses: docker/build-push-action@v1
#       with:
#         username: _json_key
#         password: ${{ env.GCR_CREDENTIALS }}
#         registry: gcr.io
#         repository: ${{ env.PROJECT_ID }}/animeshon-com
#         tags: latest,${{ github.sha }}
#         tag_with_ref: true
#         tag_with_sha: true

#   provision:
#     needs: [ build ]
#     runs-on: ubuntu-latest

#     steps:
#     - name: Clone the repository code
#       uses: actions/checkout@v2

#     - name: Setup the Terraform CLI
#       uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ env.TF_CREDENTIALS }}

#     - name: Initialize the Terraform working directory
#       working-directory: ./terraform
#       id: init
#       run: terraform init

#     - name: Setup Terraform variables
#       working-directory: ./terraform
#       id: vars
#       run: |-
#         cat > pipeline.auto.tfvars <<EOF
#         image_tag = "${{ github.sha }}"
#         EOF

#     - name: Apply the Terraform execution plan
#       working-directory: ./terraform
#       id: plan
#       run: terraform apply -auto-approve -no-color
